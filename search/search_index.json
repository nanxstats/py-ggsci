{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ggsci for Python","text":"<p>ggsci for Python offers a collection of plotnine color palettes inspired by scientific journals, data visualization libraries, science fiction movies, and TV shows.</p>"},{"location":"#installation","title":"Installation","text":"<p>You can install py-ggsci from PyPI:</p> <pre><code>pip install ggsci\n</code></pre> <p>Or install the development version from GitHub:</p> <pre><code>git clone https://github.com/nanxstats/py-ggsci.git\ncd py-ggsci\npython3 -m pip install -e .\n</code></pre>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#py-ggsci-110","title":"py-ggsci 1.1.0","text":""},{"location":"changelog/#improvements","title":"Improvements","text":"<ul> <li>Synchronized iTerm color palettes with upstream (#39).</li> </ul> <p>This update added 8 new palettes to <code>ITERM_PALETTES</code>:   Hot Dog Stand variations, Matte Black, Poimandres variations,   and Selenized Black. These palettes are now usable by <code>pal_iterm()</code>,   <code>scale_color_iterm()</code>, and <code>scale_fill_iterm()</code>.</p> <p>Additionally, the color values for 40+ existing iTerm palettes have been   updated to match the latest upstream color specifications.</p>"},{"location":"changelog/#py-ggsci-102","title":"py-ggsci 1.0.2","text":""},{"location":"changelog/#linting","title":"Linting","text":"<ul> <li>Added ruff linter configuration to <code>pyproject.toml</code> with popular rule sets   including pycodestyle, Pyflakes, pyupgrade, flake8-bugbear, flake8-simplify,   and isort (#36).</li> <li>Fixed <code>ruff check</code> linting issues including UP006, UP015, UP032, B010,   SIM108, SIM118, F401, and E501 (#36).</li> </ul>"},{"location":"changelog/#py-ggsci-101","title":"py-ggsci 1.0.1","text":""},{"location":"changelog/#maintenance","title":"Maintenance","text":"<ul> <li>Added Python 3.14 support and set as default development environment (#33).</li> <li>Updated GitHub Actions workflows to use the latest <code>checkout</code> and   <code>setup-python</code> versions (#33).</li> </ul>"},{"location":"changelog/#py-ggsci-100","title":"py-ggsci 1.0.0","text":""},{"location":"changelog/#new-features","title":"New features","text":"<ul> <li>Added <code>scale_color_primer()</code> and <code>scale_fill_primer()</code> for the   Primer (GitHub) design system palette (#29).</li> <li>Added <code>scale_color_atlassian()</code> and <code>scale_fill_atlassian()</code> for the   Atlassian Design System palette (#29).</li> <li>Added <code>scale_color_iterm()</code> and <code>scale_fill_iterm()</code>,   providing over 400 new iTerm color palettes (#30).</li> </ul>"},{"location":"changelog/#improvements_1","title":"Improvements","text":"<ul> <li>Introduced <code>example_scatterplot()</code> and <code>example_barplot()</code> to simplify   documentation examples, reducing boilerplate and aligning the visual style   with the R ggsci package examples (#28).</li> </ul>"},{"location":"changelog/#maintenance_1","title":"Maintenance","text":"<ul> <li>Refactored the logo generation script to use ImageMagick, removing the   previous R and hexSticker dependency (#20).</li> </ul>"},{"location":"changelog/#py-ggsci-041","title":"py-ggsci 0.4.1","text":""},{"location":"changelog/#documentation","title":"Documentation","text":"<ul> <li>Add an initial code block to the Get Started article showing the   essential imports required for the example plots (#17).</li> </ul>"},{"location":"changelog/#py-ggsci-040","title":"py-ggsci 0.4.0","text":""},{"location":"changelog/#testing","title":"Testing","text":"<ul> <li>Add a parametrized, introspection-driven test suite covering utilities,   palettes, and scales. Code coverage reaches 100% (#14).</li> </ul>"},{"location":"changelog/#py-ggsci-030","title":"py-ggsci 0.3.0","text":""},{"location":"changelog/#improvements_2","title":"Improvements","text":"<ul> <li>Refine type annotations and docstrings to follow best practices (#9).</li> </ul>"},{"location":"changelog/#documentation_1","title":"Documentation","text":"<ul> <li>Add a Get Started article   mirroring the original R package vignette (#11).</li> </ul>"},{"location":"changelog/#cicd","title":"CI/CD","text":"<ul> <li>Add GitHub Actions workflow for mypy type checks (#10).</li> </ul>"},{"location":"changelog/#py-ggsci-020","title":"py-ggsci 0.2.0","text":""},{"location":"changelog/#new-features_1","title":"New features","text":"<ul> <li>Port all color scales from the R package ggsci (#5).</li> </ul>"},{"location":"changelog/#improvements_3","title":"Improvements","text":"<ul> <li>Relax minimum dependency versions to broaden compatibility (#3).</li> <li>Rename palette functions from <code>*_pal()</code> to <code>pal_*()</code> for consistency   with the R package ggsci (#4).</li> </ul>"},{"location":"changelog/#documentation_2","title":"Documentation","text":"<ul> <li>Add an API reference page for each palette to the MkDocs site (#6).</li> </ul>"},{"location":"changelog/#infrastructure","title":"Infrastructure","text":"<ul> <li>Add scripts to retrieve and update color palette data (#2).</li> </ul>"},{"location":"changelog/#py-ggsci-010","title":"py-ggsci 0.1.0","text":""},{"location":"changelog/#new-features_2","title":"New features","text":"<ul> <li>Port four experimental color scales for plotnine from the R package ggsci.</li> <li>Add palette functions for direct color access.</li> <li>Support alpha transparency for all scales.</li> <li>Reverse parameter for continuous scales.</li> <li>British spelling aliases.</li> </ul>"},{"location":"articles/get-started/","title":"Get started","text":"<p>ggsci for Python offers a collection of plotnine color palettes inspired by scientific journals, data visualization libraries, science fiction movies, and TV shows. Palettes are exposed as plotnine scales:</p> <ul> <li><code>scale_color_palname()</code> / <code>scale_colour_palname()</code></li> <li><code>scale_fill_palname()</code></li> </ul> <p>This article mirrors the original R package vignette using plotnine.</p> <pre><code>import numpy as np\nimport pandas as pd\nfrom plotnine import *\nfrom plotnine.data import diamonds, mtcars\n\nfrom ggsci import *\n\nLAST = None\n</code></pre> <p></p>"},{"location":"articles/get-started/#discrete-color-palettes","title":"Discrete color palettes","text":"<p>We will use reusable helpers that construct a scatter plot with a smoothed curve and a side-by-side bar plot to demonstrate discrete palettes. The examples below use the <code>diamonds</code> dataset and apply each palette to <code>color</code> and <code>fill</code> scales respectively.</p> <pre><code># Base plots shared for discrete palette demos\np1 = example_scatterplot()\np2 = example_barplot()\n</code></pre>"},{"location":"articles/get-started/#npg","title":"NPG","text":"<pre><code>LAST = (p1 + scale_color_npg()) | (p2 + scale_fill_npg())\n</code></pre>"},{"location":"articles/get-started/#aaas","title":"AAAS","text":"<pre><code>LAST = (p1 + scale_color_aaas()) | (p2 + scale_fill_aaas())\n</code></pre>"},{"location":"articles/get-started/#nejm","title":"NEJM","text":"<pre><code>LAST = (p1 + scale_color_nejm()) | (p2 + scale_fill_nejm())\n</code></pre>"},{"location":"articles/get-started/#lancet","title":"Lancet","text":"<pre><code>LAST = (p1 + scale_color_lancet()) | (p2 + scale_fill_lancet())\n</code></pre>"},{"location":"articles/get-started/#jama","title":"JAMA","text":"<pre><code>LAST = (p1 + scale_color_jama()) | (p2 + scale_fill_jama())\n</code></pre>"},{"location":"articles/get-started/#bmj","title":"BMJ","text":"<pre><code>LAST = (p1 + scale_color_bmj()) | (p2 + scale_fill_bmj())\n</code></pre>"},{"location":"articles/get-started/#jco","title":"JCO","text":"<pre><code>LAST = (p1 + scale_color_jco()) | (p2 + scale_fill_jco())\n</code></pre>"},{"location":"articles/get-started/#ucscgb","title":"UCSCGB","text":"<pre><code>LAST = (p1 + scale_color_ucscgb()) | (p2 + scale_fill_ucscgb())\n</code></pre>"},{"location":"articles/get-started/#d3-category10","title":"D3 (category10)","text":"<pre><code>LAST = (p1 + scale_color_d3(\"category10\")) | (p2 + scale_fill_d3(\"category10\"))\n</code></pre>"},{"location":"articles/get-started/#observable-10","title":"Observable 10","text":"<pre><code>LAST = (p1 + scale_color_observable()) | (p2 + scale_fill_observable())\n</code></pre>"},{"location":"articles/get-started/#primer","title":"Primer","text":"<pre><code>LAST = (p1 + scale_color_primer()) | (p2 + scale_fill_primer())\n</code></pre>"},{"location":"articles/get-started/#atlassian","title":"Atlassian","text":"<pre><code>LAST = (p1 + scale_color_atlassian()) | (p2 + scale_fill_atlassian())\n</code></pre>"},{"location":"articles/get-started/#iterm","title":"iTerm","text":"<pre><code>LAST = (p1 + scale_color_iterm(\"Rose Pine\")) | (p2 + scale_fill_iterm(\"Rose Pine\"))\n</code></pre> <p>You can preview these color palettes in ggsci on a dedicated microsite: https://nanx.me/ggsci-iterm/. It renders example plots for all palettes on a single page for fast visual comparison.</p>"},{"location":"articles/get-started/#locuszoom","title":"LocusZoom","text":"<pre><code>LAST = (p1 + scale_color_locuszoom()) | (p2 + scale_fill_locuszoom())\n</code></pre>"},{"location":"articles/get-started/#igv-chromosomes","title":"IGV (chromosomes)","text":"<pre><code>LAST = (p1 + scale_color_igv()) | (p2 + scale_fill_igv())\n</code></pre>"},{"location":"articles/get-started/#cosmic","title":"COSMIC","text":"<pre><code>LAST = (p1 + scale_color_cosmic(\"hallmarks_light\")) | (p2 + scale_fill_cosmic(\"hallmarks_light\"))\n</code></pre> <pre><code>LAST = (p1 + scale_color_cosmic(\"hallmarks_dark\")) | (p2 + scale_fill_cosmic(\"hallmarks_dark\"))\n</code></pre> <pre><code>LAST = (p1 + scale_color_cosmic(\"signature_substitutions\")) | (p2 + scale_fill_cosmic(\"signature_substitutions\"))\n</code></pre>"},{"location":"articles/get-started/#uchicago","title":"UChicago","text":"<pre><code>LAST = (p1 + scale_color_uchicago()) | (p2 + scale_fill_uchicago())\n</code></pre>"},{"location":"articles/get-started/#star-trek","title":"Star Trek","text":"<pre><code>LAST = (p1 + scale_color_startrek()) | (p2 + scale_fill_startrek())\n</code></pre>"},{"location":"articles/get-started/#tron-legacy-use-with-dark-theme","title":"Tron Legacy (use with dark theme)","text":"<pre><code>LAST = (p1 + theme_dark() + scale_color_tron()) | (p2 + theme_dark() + scale_fill_tron())\n</code></pre>"},{"location":"articles/get-started/#futurama","title":"Futurama","text":"<pre><code>LAST = (p1 + scale_color_futurama()) | (p2 + scale_fill_futurama())\n</code></pre>"},{"location":"articles/get-started/#rick-and-morty","title":"Rick and Morty","text":"<pre><code>LAST = (p1 + scale_color_rickandmorty()) | (p2 + scale_fill_rickandmorty())\n</code></pre>"},{"location":"articles/get-started/#the-simpsons","title":"The Simpsons","text":"<pre><code>LAST = (p1 + scale_color_simpsons()) | (p2 + scale_fill_simpsons())\n</code></pre>"},{"location":"articles/get-started/#flat-ui","title":"Flat UI","text":"<pre><code>LAST = (p1 + scale_color_flatui()) | (p2 + scale_fill_flatui())\n</code></pre>"},{"location":"articles/get-started/#frontiers","title":"Frontiers","text":"<pre><code>LAST = (p1 + scale_color_frontiers()) | (p2 + scale_fill_frontiers())\n</code></pre>"},{"location":"articles/get-started/#continuous-color-palettes","title":"Continuous color palettes","text":"<p>There are two types of continuous palettes: diverging and sequential. We demonstrate with a correlation heatmap and a small random matrix.</p> <pre><code># Correlation matrix for diverging palettes (numeric columns only)\ncor = mtcars.select_dtypes(include=[np.number]).corr()\ncor_melt = (\n    cor.stack()\n    .reset_index()\n    .rename(columns={\"level_0\": \"Var1\", \"level_1\": \"Var2\", 0: \"value\"})\n)\n\np3 = (\n    ggplot(cor_melt, aes(\"Var1\", \"Var2\", fill=\"value\"))\n    + geom_tile(color=\"black\", size=0.3)\n    + theme_void()\n)\n\n# Random upper-triangular matrix for sequential palettes\nnp.random.seed(42)\nk = 6\nx = np.eye(k)\niu = np.triu_indices(k, 1)\nx[iu] = np.random.uniform(0, 1, size=len(iu[0]))\nx_melt = (\n    pd.DataFrame(x)\n    .stack()\n    .reset_index()\n    .rename(columns={\"level_0\": \"Var1\", \"level_1\": \"Var2\", 0: \"value\"})\n)\n\np4 = (\n    ggplot(x_melt, aes(\"Var1\", \"Var2\", fill=\"value\"))\n    + geom_tile(color=\"black\", size=0.3)\n    + scale_x_continuous(expand=(0, 0))\n    + scale_y_continuous(expand=(0, 0))\n    + theme_bw()\n    + theme(\n        legend_position=\"none\",\n        plot_background=element_rect(fill=\"white\"),\n        panel_background=element_rect(fill=\"white\"),\n        axis_title_x=element_blank(),\n        axis_title_y=element_blank(),\n        axis_text_x=element_blank(),\n        axis_text_y=element_blank(),\n        axis_ticks=element_blank(),\n        axis_line=element_blank(),\n        panel_border=element_blank(),\n        panel_grid_major=element_blank(),\n        panel_grid_minor=element_blank(),\n    )\n)\n\n# Placeholder panel to pad compositions to equal column counts\ndef blank_panel():\n    # Build a grid matching p4's tile layout, but with white tiles (no fill mapping)\n    try:\n        df = x_melt[[\"Var1\", \"Var2\"]].copy()\n    except NameError:\n        # Fallback to a 6x6 grid if x_melt is not yet defined\n        k = 6\n        df = pd.DataFrame(\n            [(i, j) for i in range(k) for j in range(k)], columns=[\"Var1\", \"Var2\"]\n        )\n    return (\n        ggplot(df, aes(\"Var1\", \"Var2\"))\n        + geom_tile(fill=\"white\", color=\"black\", size=0.3)\n        + scale_x_continuous(expand=(0, 0))\n        + scale_y_continuous(expand=(0, 0))\n        + theme_bw()\n        + theme(\n            legend_position=\"none\",\n            plot_background=element_rect(fill=\"white\"),\n            panel_background=element_rect(fill=\"white\"),\n            axis_title_x=element_blank(),\n            axis_title_y=element_blank(),\n            axis_text_x=element_blank(),\n            axis_text_y=element_blank(),\n            axis_ticks=element_blank(),\n            axis_line=element_blank(),\n            panel_border=element_blank(),\n            panel_grid_major=element_blank(),\n            panel_grid_minor=element_blank(),\n        )\n    )\n</code></pre>"},{"location":"articles/get-started/#gsea-diverging","title":"GSEA (diverging)","text":"<pre><code>LAST = (p3 + scale_fill_gsea()) | (p3 + scale_fill_gsea(reverse=True))\n</code></pre>"},{"location":"articles/get-started/#bootstrap-5-sequential","title":"Bootstrap 5 (sequential)","text":"<pre><code>row1 = (\n    (p4 + scale_fill_bs5(\"blue\"))\n    | (p4 + scale_fill_bs5(\"indigo\"))\n    | (p4 + scale_fill_bs5(\"purple\"))\n    | (p4 + scale_fill_bs5(\"pink\"))\n    | (p4 + scale_fill_bs5(\"red\"))\n    | (p4 + scale_fill_bs5(\"orange\"))\n    | (p4 + scale_fill_bs5(\"yellow\"))\n    | (p4 + scale_fill_bs5(\"green\"))\n)\nrow2 = (\n    (p4 + scale_fill_bs5(\"teal\"))\n    | (p4 + scale_fill_bs5(\"cyan\"))\n    | (p4 + scale_fill_bs5(\"gray\"))\n    | blank_panel()\n    | blank_panel()\n    | blank_panel()\n    | blank_panel()\n    | blank_panel()\n)\nLAST = row1 / row2\n</code></pre>"},{"location":"articles/get-started/#material-design-sequential","title":"Material Design (sequential)","text":"<pre><code>row1 = (\n    (p4 + scale_fill_material(\"red\"))\n    | (p4 + scale_fill_material(\"pink\"))\n    | (p4 + scale_fill_material(\"purple\"))\n    | (p4 + scale_fill_material(\"deep-purple\"))\n    | (p4 + scale_fill_material(\"indigo\"))\n    | (p4 + scale_fill_material(\"blue\"))\n    | (p4 + scale_fill_material(\"light-blue\"))\n    | (p4 + scale_fill_material(\"cyan\"))\n)\nrow2 = (\n    (p4 + scale_fill_material(\"teal\"))\n    | (p4 + scale_fill_material(\"green\"))\n    | (p4 + scale_fill_material(\"light-green\"))\n    | (p4 + scale_fill_material(\"lime\"))\n    | (p4 + scale_fill_material(\"yellow\"))\n    | (p4 + scale_fill_material(\"amber\"))\n    | (p4 + scale_fill_material(\"orange\"))\n    | (p4 + scale_fill_material(\"deep-orange\"))\n)\nrow3 = (\n    (p4 + scale_fill_material(\"brown\"))\n    | (p4 + scale_fill_material(\"grey\"))\n    | (p4 + scale_fill_material(\"blue-grey\"))\n    | blank_panel()\n    | blank_panel()\n    | blank_panel()\n    | blank_panel()\n    | blank_panel()\n)\nLAST = row1 / row2 / row3\n</code></pre>"},{"location":"articles/get-started/#tailwind-css-3-sequential","title":"Tailwind CSS 3 (sequential)","text":"<pre><code>row1 = (\n    (p4 + scale_fill_tw3(\"slate\"))\n    | (p4 + scale_fill_tw3(\"gray\"))\n    | (p4 + scale_fill_tw3(\"zinc\"))\n    | (p4 + scale_fill_tw3(\"neutral\"))\n    | (p4 + scale_fill_tw3(\"stone\"))\n    | (p4 + scale_fill_tw3(\"red\"))\n    | (p4 + scale_fill_tw3(\"orange\"))\n    | (p4 + scale_fill_tw3(\"amber\"))\n)\nrow2 = (\n    (p4 + scale_fill_tw3(\"yellow\"))\n    | (p4 + scale_fill_tw3(\"lime\"))\n    | (p4 + scale_fill_tw3(\"green\"))\n    | (p4 + scale_fill_tw3(\"emerald\"))\n    | (p4 + scale_fill_tw3(\"teal\"))\n    | (p4 + scale_fill_tw3(\"cyan\"))\n    | (p4 + scale_fill_tw3(\"sky\"))\n    | (p4 + scale_fill_tw3(\"blue\"))\n)\nrow3 = (\n    (p4 + scale_fill_tw3(\"indigo\"))\n    | (p4 + scale_fill_tw3(\"violet\"))\n    | (p4 + scale_fill_tw3(\"purple\"))\n    | (p4 + scale_fill_tw3(\"fuchsia\"))\n    | (p4 + scale_fill_tw3(\"pink\"))\n    | (p4 + scale_fill_tw3(\"rose\"))\n    | blank_panel()\n    | blank_panel()\n)\nLAST = row1 / row2 / row3\n</code></pre>"},{"location":"articles/get-started/#use-palette-functions-outside-plotnine","title":"Use palette functions outside plotnine","text":"<p>You can use palette generator functions to get hex color codes directly for other plotting systems.</p> <pre><code>mypal = pal_observable(\"observable10\", alpha=0.7)(10)\ndf_cols = pd.DataFrame({\"x\": range(len(mypal)), \"fill\": mypal})\nLAST = (\n    ggplot(df_cols, aes(\"x\", 1, fill=\"fill\"))\n    + geom_tile(width=1, height=1)\n    + scale_fill_identity(guide=None)\n    + theme_void()\n)\n</code></pre> <p> </p>"},{"location":"articles/get-started/#discussion","title":"Discussion","text":"<p>Some palettes may not be optimal for specific needs such as color-blind safety, photocopy safety, or print-friendliness. Consider alternatives like ColorBrewer or viridis when these constraints apply. Palettes in ggsci are for research and demonstration purposes only.</p>"},{"location":"reference/aaas/","title":"AAAS","text":""},{"location":"reference/aaas/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/aaas/#ggsci.palettes.pal_aaas","title":"<code>pal_aaas(palette='default', alpha=1.0)</code>","text":"<p>AAAS journal color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/aaas/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/aaas/#ggsci.scales.scale_colour_aaas","title":"<code>scale_colour_aaas = scale_color_aaas</code>  <code>module-attribute</code>","text":""},{"location":"reference/aaas/#ggsci.scales.scale_color_aaas","title":"<code>scale_color_aaas</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>AAAS journal color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/aaas/#ggsci.scales.scale_fill_aaas","title":"<code>scale_fill_aaas</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>AAAS journal fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/atlassian/","title":"Atlassian","text":""},{"location":"reference/atlassian/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/atlassian/#ggsci.palettes.pal_atlassian","title":"<code>pal_atlassian(palette='categorical8', alpha=1.0)</code>","text":"<p>Atlassian design system color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"categorical8\" is available.</p> <code>'categorical8'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/atlassian/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/atlassian/#ggsci.scales.scale_colour_atlassian","title":"<code>scale_colour_atlassian = scale_color_atlassian</code>  <code>module-attribute</code>","text":""},{"location":"reference/atlassian/#ggsci.scales.scale_color_atlassian","title":"<code>scale_color_atlassian</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Atlassian design system color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"categorical8\" is available.</p> <code>'categorical8'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/atlassian/#ggsci.scales.scale_fill_atlassian","title":"<code>scale_fill_atlassian</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Atlassian design system fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"categorical8\" is available.</p> <code>'categorical8'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/bmj/","title":"BMJ","text":""},{"location":"reference/bmj/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/bmj/#ggsci.palettes.pal_bmj","title":"<code>pal_bmj(palette='default', alpha=1.0)</code>","text":"<p>BMJ journal color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/bmj/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/bmj/#ggsci.scales.scale_colour_bmj","title":"<code>scale_colour_bmj = scale_color_bmj</code>  <code>module-attribute</code>","text":""},{"location":"reference/bmj/#ggsci.scales.scale_color_bmj","title":"<code>scale_color_bmj</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>BMJ journal color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/bmj/#ggsci.scales.scale_fill_bmj","title":"<code>scale_fill_bmj</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>BMJ journal fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/bs5/","title":"BS5","text":""},{"location":"reference/bs5/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/bs5/#ggsci.palettes.pal_bs5","title":"<code>pal_bs5(palette='blue', n=10, alpha=1.0, reverse=False)</code>","text":"<p>Bootstrap 5 color palette (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"blue\", \"indigo\", \"purple\", \"pink\", \"red\", \"orange\", \"yellow\", \"green\", \"teal\", \"cyan\", or \"gray\".</p> <code>'blue'</code> <code>n</code> <code>int</code> <p>Number of colors to generate.</p> <code>10</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <p>Returns:</p> Type Description <code>Sequence[str]</code> <p>A sequence of hex color codes.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/bs5/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/bs5/#ggsci.scales.scale_colour_bs5","title":"<code>scale_colour_bs5 = scale_color_bs5</code>  <code>module-attribute</code>","text":""},{"location":"reference/bs5/#ggsci.scales.scale_color_bs5","title":"<code>scale_color_bs5(palette='blue', *, alpha=1.0, reverse=False, **kwargs)</code>","text":"<p>Bootstrap 5 color scale (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"blue\", \"indigo\", \"purple\", \"pink\", \"red\", \"orange\", \"yellow\", \"green\", \"teal\", \"cyan\", or \"gray\".</p> <code>'blue'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments forwarded to plotnine.scale_color_gradientn.</p> <code>{}</code>"},{"location":"reference/bs5/#ggsci.scales.scale_fill_bs5","title":"<code>scale_fill_bs5(palette='blue', *, alpha=1.0, reverse=False, **kwargs)</code>","text":"<p>Bootstrap 5 fill scale (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"blue\", \"indigo\", \"purple\", \"pink\", \"red\", \"orange\", \"yellow\", \"green\", \"teal\", \"cyan\", or \"gray\".</p> <code>'blue'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments forwarded to plotnine.scale_fill_gradientn.</p> <code>{}</code>"},{"location":"reference/cosmic/","title":"COSMIC","text":""},{"location":"reference/cosmic/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/cosmic/#ggsci.palettes.pal_cosmic","title":"<code>pal_cosmic(palette='hallmarks_dark', alpha=1.0)</code>","text":"<p>COSMIC color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"hallmarks_dark\", \"hallmarks_light\", or \"signature_substitutions\".</p> <code>'hallmarks_dark'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/cosmic/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/cosmic/#ggsci.scales.scale_colour_cosmic","title":"<code>scale_colour_cosmic = scale_color_cosmic</code>  <code>module-attribute</code>","text":""},{"location":"reference/cosmic/#ggsci.scales.scale_color_cosmic","title":"<code>scale_color_cosmic</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>COSMIC color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"hallmarks_dark\", \"hallmarks_light\", or \"signature_substitutions\".</p> <code>'hallmarks_dark'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/cosmic/#ggsci.scales.scale_fill_cosmic","title":"<code>scale_fill_cosmic</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>COSMIC fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"hallmarks_dark\", \"hallmarks_light\", or \"signature_substitutions\".</p> <code>'hallmarks_dark'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/d3/","title":"D3","text":""},{"location":"reference/d3/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/d3/#ggsci.palettes.pal_d3","title":"<code>pal_d3(palette='category10', alpha=1.0)</code>","text":"<p>D3.js color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"category10\", \"category20\", \"category20b\", or \"category20c\".</p> <code>'category10'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/d3/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/d3/#ggsci.scales.scale_colour_d3","title":"<code>scale_colour_d3 = scale_color_d3</code>  <code>module-attribute</code>","text":""},{"location":"reference/d3/#ggsci.scales.scale_color_d3","title":"<code>scale_color_d3</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>D3.js color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"category10\", \"category20\", \"category20b\", or \"category20c\".</p> <code>'category10'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/d3/#ggsci.scales.scale_fill_d3","title":"<code>scale_fill_d3</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>D3.js fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"category10\", \"category20\", \"category20b\", or \"category20c\".</p> <code>'category10'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/flatui/","title":"Flat UI","text":""},{"location":"reference/flatui/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/flatui/#ggsci.palettes.pal_flatui","title":"<code>pal_flatui(palette='default', alpha=1.0)</code>","text":"<p>Flat UI color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"default\", \"flattastic\", or \"aussie\".</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/flatui/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/flatui/#ggsci.scales.scale_colour_flatui","title":"<code>scale_colour_flatui = scale_color_flatui</code>  <code>module-attribute</code>","text":""},{"location":"reference/flatui/#ggsci.scales.scale_color_flatui","title":"<code>scale_color_flatui</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Flat UI color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"default\", \"flattastic\", or \"aussie\".</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/flatui/#ggsci.scales.scale_fill_flatui","title":"<code>scale_fill_flatui</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Flat UI fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"default\", \"flattastic\", or \"aussie\".</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/frontiers/","title":"Frontiers","text":""},{"location":"reference/frontiers/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/frontiers/#ggsci.palettes.pal_frontiers","title":"<code>pal_frontiers(palette='default', alpha=1.0)</code>","text":"<p>Frontiers journal color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/frontiers/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/frontiers/#ggsci.scales.scale_colour_frontiers","title":"<code>scale_colour_frontiers = scale_color_frontiers</code>  <code>module-attribute</code>","text":""},{"location":"reference/frontiers/#ggsci.scales.scale_color_frontiers","title":"<code>scale_color_frontiers</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Frontiers journal color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/frontiers/#ggsci.scales.scale_fill_frontiers","title":"<code>scale_fill_frontiers</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Frontiers journal fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/futurama/","title":"Futurama","text":""},{"location":"reference/futurama/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/futurama/#ggsci.palettes.pal_futurama","title":"<code>pal_futurama(palette='planetexpress', alpha=1.0)</code>","text":"<p>Futurama color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"planetexpress\" is available.</p> <code>'planetexpress'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/futurama/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/futurama/#ggsci.scales.scale_colour_futurama","title":"<code>scale_colour_futurama = scale_color_futurama</code>  <code>module-attribute</code>","text":""},{"location":"reference/futurama/#ggsci.scales.scale_color_futurama","title":"<code>scale_color_futurama</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Futurama color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"planetexpress\" is available.</p> <code>'planetexpress'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/futurama/#ggsci.scales.scale_fill_futurama","title":"<code>scale_fill_futurama</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Futurama fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"planetexpress\" is available.</p> <code>'planetexpress'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/gsea/","title":"GSEA","text":""},{"location":"reference/gsea/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/gsea/#ggsci.palettes.pal_gsea","title":"<code>pal_gsea(palette='default', n=12, alpha=1.0, reverse=False)</code>","text":"<p>GSEA GenePattern color palette (continuous/diverging).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>n</code> <code>int</code> <p>Number of colors to generate.</p> <code>12</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <p>Returns:</p> Type Description <code>Sequence[str]</code> <p>A sequence of hex color codes.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/gsea/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/gsea/#ggsci.scales.scale_colour_gsea","title":"<code>scale_colour_gsea = scale_color_gsea</code>  <code>module-attribute</code>","text":""},{"location":"reference/gsea/#ggsci.scales.scale_color_gsea","title":"<code>scale_color_gsea(palette='default', *, alpha=1.0, reverse=False, **kwargs)</code>","text":"<p>GSEA GenePattern color scale (continuous/diverging).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments forwarded to plotnine.scale_color_gradientn.</p> <code>{}</code>"},{"location":"reference/gsea/#ggsci.scales.scale_fill_gsea","title":"<code>scale_fill_gsea(palette='default', *, alpha=1.0, reverse=False, **kwargs)</code>","text":"<p>GSEA GenePattern fill scale (continuous/diverging).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments forwarded to plotnine.scale_fill_gradientn.</p> <code>{}</code>"},{"location":"reference/igv/","title":"IGV","text":""},{"location":"reference/igv/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/igv/#ggsci.palettes.pal_igv","title":"<code>pal_igv(palette='default', alpha=1.0)</code>","text":"<p>IGV color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"default\" or \"alternating\".</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/igv/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/igv/#ggsci.scales.scale_colour_igv","title":"<code>scale_colour_igv = scale_color_igv</code>  <code>module-attribute</code>","text":""},{"location":"reference/igv/#ggsci.scales.scale_color_igv","title":"<code>scale_color_igv</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>IGV color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"default\" or \"alternating\".</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/igv/#ggsci.scales.scale_fill_igv","title":"<code>scale_fill_igv</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>IGV fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"default\" or \"alternating\".</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/iterm/","title":"iTerm","text":""},{"location":"reference/iterm/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/iterm/#ggsci.palettes.pal_iterm","title":"<code>pal_iterm(palette='Rose Pine', variant='normal', alpha=1.0)</code>","text":"<p>iTerm color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. See <code>ITERM_PALETTES</code> for available options.</p> <code>'Rose Pine'</code> <code>variant</code> <code>str</code> <p>Palette variant. Either \"normal\" or \"bright\".</p> <code>'normal'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> Details <p>Preview all iTerm palettes: https://nanx.me/ggsci-iterm/.</p> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name, variant, or alpha is invalid.</p>"},{"location":"reference/iterm/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/iterm/#ggsci.scales.scale_colour_iterm","title":"<code>scale_colour_iterm = scale_color_iterm</code>  <code>module-attribute</code>","text":""},{"location":"reference/iterm/#ggsci.scales.scale_color_iterm","title":"<code>scale_color_iterm</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>iTerm color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. See <code>ITERM_PALETTES</code> for available options.</p> <code>'Rose Pine'</code> <code>variant</code> <code>InitVar[str]</code> <p>Palette variant. Either \"normal\" or \"bright\".</p> <code>'normal'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> Details <p>Preview all iTerm palettes: https://nanx.me/ggsci-iterm/.</p>"},{"location":"reference/iterm/#ggsci.scales.scale_fill_iterm","title":"<code>scale_fill_iterm</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>iTerm fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. See <code>ITERM_PALETTES</code> for available options.</p> <code>'Rose Pine'</code> <code>variant</code> <code>InitVar[str]</code> <p>Palette variant. Either \"normal\" or \"bright\".</p> <code>'normal'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> Details <p>Preview all iTerm palettes: https://nanx.me/ggsci-iterm/.</p>"},{"location":"reference/jama/","title":"JAMA","text":""},{"location":"reference/jama/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/jama/#ggsci.palettes.pal_jama","title":"<code>pal_jama(palette='default', alpha=1.0)</code>","text":"<p>JAMA journal color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/jama/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/jama/#ggsci.scales.scale_colour_jama","title":"<code>scale_colour_jama = scale_color_jama</code>  <code>module-attribute</code>","text":""},{"location":"reference/jama/#ggsci.scales.scale_color_jama","title":"<code>scale_color_jama</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>JAMA journal color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/jama/#ggsci.scales.scale_fill_jama","title":"<code>scale_fill_jama</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>JAMA journal fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/jco/","title":"JCO","text":""},{"location":"reference/jco/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/jco/#ggsci.palettes.pal_jco","title":"<code>pal_jco(palette='default', alpha=1.0)</code>","text":"<p>JCO journal color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/jco/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/jco/#ggsci.scales.scale_colour_jco","title":"<code>scale_colour_jco = scale_color_jco</code>  <code>module-attribute</code>","text":""},{"location":"reference/jco/#ggsci.scales.scale_color_jco","title":"<code>scale_color_jco</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>JCO journal color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/jco/#ggsci.scales.scale_fill_jco","title":"<code>scale_fill_jco</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>JCO journal fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/lancet/","title":"Lancet","text":""},{"location":"reference/lancet/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/lancet/#ggsci.palettes.pal_lancet","title":"<code>pal_lancet(palette='lanonc', alpha=1.0)</code>","text":"<p>Lancet journal color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"lanonc\" is available.</p> <code>'lanonc'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/lancet/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/lancet/#ggsci.scales.scale_colour_lancet","title":"<code>scale_colour_lancet = scale_color_lancet</code>  <code>module-attribute</code>","text":""},{"location":"reference/lancet/#ggsci.scales.scale_color_lancet","title":"<code>scale_color_lancet</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Lancet journal color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"lanonc\" is available.</p> <code>'lanonc'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/lancet/#ggsci.scales.scale_fill_lancet","title":"<code>scale_fill_lancet</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Lancet journal fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"lanonc\" is available.</p> <code>'lanonc'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/locuszoom/","title":"LocusZoom","text":""},{"location":"reference/locuszoom/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/locuszoom/#ggsci.palettes.pal_locuszoom","title":"<code>pal_locuszoom(palette='default', alpha=1.0)</code>","text":"<p>LocusZoom color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/locuszoom/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/locuszoom/#ggsci.scales.scale_colour_locuszoom","title":"<code>scale_colour_locuszoom = scale_color_locuszoom</code>  <code>module-attribute</code>","text":""},{"location":"reference/locuszoom/#ggsci.scales.scale_color_locuszoom","title":"<code>scale_color_locuszoom</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>LocusZoom color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/locuszoom/#ggsci.scales.scale_fill_locuszoom","title":"<code>scale_fill_locuszoom</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>LocusZoom fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/material/","title":"Material","text":""},{"location":"reference/material/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/material/#ggsci.palettes.pal_material","title":"<code>pal_material(palette='red', n=10, alpha=1.0, reverse=False)</code>","text":"<p>Material Design color palette (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"red\", \"pink\", \"purple\", \"deep-purple\", \"indigo\", \"blue\", \"light-blue\", \"cyan\", \"teal\", \"green\", \"light-green\", \"lime\", \"yellow\", \"amber\", \"orange\", \"deep-orange\", \"brown\", \"grey\", or \"blue-grey\".</p> <code>'red'</code> <code>n</code> <code>int</code> <p>Number of colors to generate.</p> <code>10</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <p>Returns:</p> Type Description <code>Sequence[str]</code> <p>A sequence of hex color codes.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/material/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/material/#ggsci.scales.scale_colour_material","title":"<code>scale_colour_material = scale_color_material</code>  <code>module-attribute</code>","text":""},{"location":"reference/material/#ggsci.scales.scale_color_material","title":"<code>scale_color_material(palette='red', *, alpha=1.0, reverse=False, **kwargs)</code>","text":"<p>Material Design color scale (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"red\", \"pink\", \"purple\", \"deep-purple\", \"indigo\", \"blue\", \"light-blue\", \"cyan\", \"teal\", \"green\", \"light-green\", \"lime\", \"yellow\", \"amber\", \"orange\", \"deep-orange\", \"brown\", \"grey\", or \"blue-grey\".</p> <code>'red'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments forwarded to plotnine.scale_color_gradientn.</p> <code>{}</code>"},{"location":"reference/material/#ggsci.scales.scale_fill_material","title":"<code>scale_fill_material(palette='red', *, alpha=1.0, reverse=False, **kwargs)</code>","text":"<p>Material Design fill scale (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"red\", \"pink\", \"purple\", \"deep-purple\", \"indigo\", \"blue\", \"light-blue\", \"cyan\", \"teal\", \"green\", \"light-green\", \"lime\", \"yellow\", \"amber\", \"orange\", \"deep-orange\", \"brown\", \"grey\", or \"blue-grey\".</p> <code>'red'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments forwarded to plotnine.scale_fill_gradientn.</p> <code>{}</code>"},{"location":"reference/nejm/","title":"NEJM","text":""},{"location":"reference/nejm/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/nejm/#ggsci.palettes.pal_nejm","title":"<code>pal_nejm(palette='default', alpha=1.0)</code>","text":"<p>NEJM journal color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/nejm/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/nejm/#ggsci.scales.scale_colour_nejm","title":"<code>scale_colour_nejm = scale_color_nejm</code>  <code>module-attribute</code>","text":""},{"location":"reference/nejm/#ggsci.scales.scale_color_nejm","title":"<code>scale_color_nejm</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>NEJM journal color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/nejm/#ggsci.scales.scale_fill_nejm","title":"<code>scale_fill_nejm</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>NEJM journal fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/npg/","title":"NPG","text":""},{"location":"reference/npg/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/npg/#ggsci.palettes.pal_npg","title":"<code>pal_npg(palette='nrc', alpha=1.0)</code>","text":"<p>NPG journal color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"nrc\" is available.</p> <code>'nrc'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/npg/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/npg/#ggsci.scales.scale_colour_npg","title":"<code>scale_colour_npg = scale_color_npg</code>  <code>module-attribute</code>","text":""},{"location":"reference/npg/#ggsci.scales.scale_color_npg","title":"<code>scale_color_npg</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>NPG journal color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"nrc\" is available.</p> <code>'nrc'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/npg/#ggsci.scales.scale_fill_npg","title":"<code>scale_fill_npg</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>NPG journal fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"nrc\" is available.</p> <code>'nrc'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/observable/","title":"Observable","text":""},{"location":"reference/observable/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/observable/#ggsci.palettes.pal_observable","title":"<code>pal_observable(palette='observable10', alpha=1.0)</code>","text":"<p>Observable color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"observable10\" is available.</p> <code>'observable10'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/observable/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/observable/#ggsci.scales.scale_colour_observable","title":"<code>scale_colour_observable = scale_color_observable</code>  <code>module-attribute</code>","text":""},{"location":"reference/observable/#ggsci.scales.scale_color_observable","title":"<code>scale_color_observable</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Observable color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"observable10\" is available.</p> <code>'observable10'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/observable/#ggsci.scales.scale_fill_observable","title":"<code>scale_fill_observable</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Observable fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"observable10\" is available.</p> <code>'observable10'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/primer/","title":"Primer","text":""},{"location":"reference/primer/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/primer/#ggsci.palettes.pal_primer","title":"<code>pal_primer(palette='mark17', alpha=1.0)</code>","text":"<p>Primer design system color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"mark17\" is available.</p> <code>'mark17'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/primer/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/primer/#ggsci.scales.scale_colour_primer","title":"<code>scale_colour_primer = scale_color_primer</code>  <code>module-attribute</code>","text":""},{"location":"reference/primer/#ggsci.scales.scale_color_primer","title":"<code>scale_color_primer</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Primer design system color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"mark17\" is available.</p> <code>'mark17'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/primer/#ggsci.scales.scale_fill_primer","title":"<code>scale_fill_primer</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Primer design system fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"mark17\" is available.</p> <code>'mark17'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/rickandmorty/","title":"Rick and Morty","text":""},{"location":"reference/rickandmorty/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/rickandmorty/#ggsci.palettes.pal_rickandmorty","title":"<code>pal_rickandmorty(palette='schwifty', alpha=1.0)</code>","text":"<p>Rick and Morty color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"schwifty\" is available.</p> <code>'schwifty'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/rickandmorty/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/rickandmorty/#ggsci.scales.scale_colour_rickandmorty","title":"<code>scale_colour_rickandmorty = scale_color_rickandmorty</code>  <code>module-attribute</code>","text":""},{"location":"reference/rickandmorty/#ggsci.scales.scale_color_rickandmorty","title":"<code>scale_color_rickandmorty</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Rick and Morty color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"schwifty\" is available.</p> <code>'schwifty'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/rickandmorty/#ggsci.scales.scale_fill_rickandmorty","title":"<code>scale_fill_rickandmorty</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Rick and Morty fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"schwifty\" is available.</p> <code>'schwifty'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/simpsons/","title":"Simpsons","text":""},{"location":"reference/simpsons/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/simpsons/#ggsci.palettes.pal_simpsons","title":"<code>pal_simpsons(palette='springfield', alpha=1.0)</code>","text":"<p>The Simpsons color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"springfield\" is available.</p> <code>'springfield'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/simpsons/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/simpsons/#ggsci.scales.scale_colour_simpsons","title":"<code>scale_colour_simpsons = scale_color_simpsons</code>  <code>module-attribute</code>","text":""},{"location":"reference/simpsons/#ggsci.scales.scale_color_simpsons","title":"<code>scale_color_simpsons</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>The Simpsons color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"springfield\" is available.</p> <code>'springfield'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/simpsons/#ggsci.scales.scale_fill_simpsons","title":"<code>scale_fill_simpsons</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>The Simpsons fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"springfield\" is available.</p> <code>'springfield'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/startrek/","title":"Star Trek","text":""},{"location":"reference/startrek/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/startrek/#ggsci.palettes.pal_startrek","title":"<code>pal_startrek(palette='uniform', alpha=1.0)</code>","text":"<p>Star Trek color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"uniform\" is available.</p> <code>'uniform'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/startrek/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/startrek/#ggsci.scales.scale_colour_startrek","title":"<code>scale_colour_startrek = scale_color_startrek</code>  <code>module-attribute</code>","text":""},{"location":"reference/startrek/#ggsci.scales.scale_color_startrek","title":"<code>scale_color_startrek</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Star Trek color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"uniform\" is available.</p> <code>'uniform'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/startrek/#ggsci.scales.scale_fill_startrek","title":"<code>scale_fill_startrek</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Star Trek fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"uniform\" is available.</p> <code>'uniform'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/tron/","title":"TRON","text":""},{"location":"reference/tron/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/tron/#ggsci.palettes.pal_tron","title":"<code>pal_tron(palette='legacy', alpha=1.0)</code>","text":"<p>Tron Legacy color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"legacy\" is available.</p> <code>'legacy'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/tron/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/tron/#ggsci.scales.scale_colour_tron","title":"<code>scale_colour_tron = scale_color_tron</code>  <code>module-attribute</code>","text":""},{"location":"reference/tron/#ggsci.scales.scale_color_tron","title":"<code>scale_color_tron</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Tron Legacy color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"legacy\" is available.</p> <code>'legacy'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/tron/#ggsci.scales.scale_fill_tron","title":"<code>scale_fill_tron</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>Tron Legacy fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"legacy\" is available.</p> <code>'legacy'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/tw3/","title":"TW3","text":""},{"location":"reference/tw3/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/tw3/#ggsci.palettes.pal_tw3","title":"<code>pal_tw3(palette='blue', n=11, alpha=1.0, reverse=False)</code>","text":"<p>Tailwind CSS 3 color palette (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"slate\", \"gray\", \"zinc\", \"neutral\", \"stone\", \"red\", \"orange\", \"amber\", \"yellow\", \"lime\", \"green\", \"emerald\", \"teal\", \"cyan\", \"sky\", \"blue\", \"indigo\", \"violet\", \"purple\", \"fuchsia\", \"pink\", or \"rose\".</p> <code>'blue'</code> <code>n</code> <code>int</code> <p>Number of colors to generate.</p> <code>11</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <p>Returns:</p> Type Description <code>Sequence[str]</code> <p>A sequence of hex color codes.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/tw3/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/tw3/#ggsci.scales.scale_colour_tw3","title":"<code>scale_colour_tw3 = scale_color_tw3</code>  <code>module-attribute</code>","text":""},{"location":"reference/tw3/#ggsci.scales.scale_color_tw3","title":"<code>scale_color_tw3(palette='blue', *, alpha=1.0, reverse=False, **kwargs)</code>","text":"<p>Tailwind CSS 3 color scale (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"slate\", \"gray\", \"zinc\", \"neutral\", \"stone\", \"red\", \"orange\", \"amber\", \"yellow\", \"lime\", \"green\", \"emerald\", \"teal\", \"cyan\", \"sky\", \"blue\", \"indigo\", \"violet\", \"purple\", \"fuchsia\", \"pink\", or \"rose\".</p> <code>'blue'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments forwarded to plotnine.scale_color_gradientn.</p> <code>{}</code>"},{"location":"reference/tw3/#ggsci.scales.scale_fill_tw3","title":"<code>scale_fill_tw3(palette='blue', *, alpha=1.0, reverse=False, **kwargs)</code>","text":"<p>Tailwind CSS 3 fill scale (continuous/sequential).</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"slate\", \"gray\", \"zinc\", \"neutral\", \"stone\", \"red\", \"orange\", \"amber\", \"yellow\", \"lime\", \"green\", \"emerald\", \"teal\", \"cyan\", \"sky\", \"blue\", \"indigo\", \"violet\", \"purple\", \"fuchsia\", \"pink\", or \"rose\".</p> <code>'blue'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <code>reverse</code> <code>bool</code> <p>Whether to reverse the color order.</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments forwarded to plotnine.scale_fill_gradientn.</p> <code>{}</code>"},{"location":"reference/uchicago/","title":"UChicago","text":""},{"location":"reference/uchicago/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/uchicago/#ggsci.palettes.pal_uchicago","title":"<code>pal_uchicago(palette='default', alpha=1.0)</code>","text":"<p>University of Chicago color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name: \"default\", \"light\", or \"dark\".</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/uchicago/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/uchicago/#ggsci.scales.scale_colour_uchicago","title":"<code>scale_colour_uchicago = scale_color_uchicago</code>  <code>module-attribute</code>","text":""},{"location":"reference/uchicago/#ggsci.scales.scale_color_uchicago","title":"<code>scale_color_uchicago</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>University of Chicago color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"default\", \"light\", or \"dark\".</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/uchicago/#ggsci.scales.scale_fill_uchicago","title":"<code>scale_fill_uchicago</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>University of Chicago fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name: \"default\", \"light\", or \"dark\".</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/ucscgb/","title":"UCSCGB","text":""},{"location":"reference/ucscgb/#ggsci.palettes","title":"<code>ggsci.palettes</code>","text":"<p>Palette generators for ggsci.</p> <p>This module provides palette functions that either return a callable for discrete palettes or a sequence of colors for continuous palettes.</p>"},{"location":"reference/ucscgb/#ggsci.palettes.pal_ucscgb","title":"<code>pal_ucscgb(palette='default', alpha=1.0)</code>","text":"<p>UCSC Genome Browser color palette.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>str</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>float</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code> <p>Returns:</p> Type Description <code>PaletteFunc</code> <p>A callable that takes n and returns a color sequence.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the palette name is unknown or alpha is invalid.</p>"},{"location":"reference/ucscgb/#ggsci.scales","title":"<code>ggsci.scales</code>","text":"<p>Plotnine scales for ggsci palettes.</p>"},{"location":"reference/ucscgb/#ggsci.scales.scale_colour_ucscgb","title":"<code>scale_colour_ucscgb = scale_color_ucscgb</code>  <code>module-attribute</code>","text":""},{"location":"reference/ucscgb/#ggsci.scales.scale_color_ucscgb","title":"<code>scale_color_ucscgb</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>UCSC Genome Browser color scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"},{"location":"reference/ucscgb/#ggsci.scales.scale_fill_ucscgb","title":"<code>scale_fill_ucscgb</code>  <code>dataclass</code>","text":"<p>               Bases: <code>scale_discrete</code></p> <p>UCSC Genome Browser fill scale.</p> <p>Parameters:</p> Name Type Description Default <code>palette</code> <code>InitVar[str]</code> <p>Palette name. Currently only \"default\" is available.</p> <code>'default'</code> <code>alpha</code> <code>InitVar[float]</code> <p>Transparency level, between 0 and 1.</p> <code>1.0</code>"}]}